"use strict";(self.webpackChunkdocusaurus=self.webpackChunkdocusaurus||[]).push([[6619],{3905:function(e,r,n){n.d(r,{Zo:function(){return c},kt:function(){return f}});var t=n(7294);function a(e,r,n){return r in e?Object.defineProperty(e,r,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[r]=n,e}function o(e,r){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);r&&(t=t.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),n.push.apply(n,t)}return n}function l(e){for(var r=1;r<arguments.length;r++){var n=null!=arguments[r]?arguments[r]:{};r%2?o(Object(n),!0).forEach((function(r){a(e,r,n[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(n,r))}))}return e}function i(e,r){if(null==e)return{};var n,t,a=function(e,r){if(null==e)return{};var n,t,a={},o=Object.keys(e);for(t=0;t<o.length;t++)n=o[t],r.indexOf(n)>=0||(a[n]=e[n]);return a}(e,r);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(t=0;t<o.length;t++)n=o[t],r.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=t.createContext({}),p=function(e){var r=t.useContext(s),n=r;return e&&(n="function"==typeof e?e(r):l(l({},r),e)),n},c=function(e){var r=p(e.components);return t.createElement(s.Provider,{value:r},e.children)},y={inlineCode:"code",wrapper:function(e){var r=e.children;return t.createElement(t.Fragment,{},r)}},u=t.forwardRef((function(e,r){var n=e.components,a=e.mdxType,o=e.originalType,s=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),u=p(n),f=a,m=u["".concat(s,".").concat(f)]||u[f]||y[f]||o;return n?t.createElement(m,l(l({ref:r},c),{},{components:n})):t.createElement(m,l({ref:r},c))}));function f(e,r){var n=arguments,a=r&&r.mdxType;if("string"==typeof e||a){var o=n.length,l=new Array(o);l[0]=u;var i={};for(var s in r)hasOwnProperty.call(r,s)&&(i[s]=r[s]);i.originalType=e,i.mdxType="string"==typeof e?e:a,l[1]=i;for(var p=2;p<o;p++)l[p]=n[p];return t.createElement.apply(null,l)}return t.createElement.apply(null,n)}u.displayName="MDXCreateElement"},846:function(e,r,n){n.r(r),n.d(r,{assets:function(){return c},contentTitle:function(){return s},default:function(){return f},frontMatter:function(){return i},metadata:function(){return p},toc:function(){return y}});var t=n(7462),a=n(3366),o=(n(7294),n(3905)),l=["components"],i={title:"\u4e2d\u4ecb\u8005\u6a21\u5f0f/Mediator Pattern",tags:["\u8bbe\u8ba1\u6a21\u5f0f"]},s=void 0,p={unversionedId:"\u8bbe\u8ba1\u6a21\u5f0f/a4",id:"\u8bbe\u8ba1\u6a21\u5f0f/a4",title:"\u4e2d\u4ecb\u8005\u6a21\u5f0f/Mediator Pattern",description:"\u4ec0\u4e48\u662f\u4e2d\u4ecb\u8005\u6a21\u5f0f",source:"@site/docs/\u8bbe\u8ba1\u6a21\u5f0f/a4.md",sourceDirName:"\u8bbe\u8ba1\u6a21\u5f0f",slug:"/\u8bbe\u8ba1\u6a21\u5f0f/a4",permalink:"/leo/docs/\u8bbe\u8ba1\u6a21\u5f0f/a4",tags:[{label:"\u8bbe\u8ba1\u6a21\u5f0f",permalink:"/leo/docs/tags/\u8bbe\u8ba1\u6a21\u5f0f"}],version:"current",frontMatter:{title:"\u4e2d\u4ecb\u8005\u6a21\u5f0f/Mediator Pattern",tags:["\u8bbe\u8ba1\u6a21\u5f0f"]},sidebar:"tutorialSidebar",previous:{title:"\u88c5\u9970\u8005\u6a21\u5f0f",permalink:"/leo/docs/\u8bbe\u8ba1\u6a21\u5f0f/a3"},next:{title:"\u804c\u8d23\u94fe\u6a21\u5f0f",permalink:"/leo/docs/\u8bbe\u8ba1\u6a21\u5f0f/a5"}},c={},y=[{value:"\u4ec0\u4e48\u662f\u4e2d\u4ecb\u8005\u6a21\u5f0f",id:"\u4ec0\u4e48\u662f\u4e2d\u4ecb\u8005\u6a21\u5f0f",level:2},{value:"\u9762\u5411\u5bf9\u8c61\u4f8b\u5b50\uff1a",id:"\u9762\u5411\u5bf9\u8c61\u4f8b\u5b50",level:2}],u={toc:y};function f(e){var r=e.components,n=(0,a.Z)(e,l);return(0,o.kt)("wrapper",(0,t.Z)({},u,n,{components:r,mdxType:"MDXLayout"}),(0,o.kt)("h2",{id:"\u4ec0\u4e48\u662f\u4e2d\u4ecb\u8005\u6a21\u5f0f"},"\u4ec0\u4e48\u662f\u4e2d\u4ecb\u8005\u6a21\u5f0f"),(0,o.kt)("p",null,"\u4e2d\u4ecb\u8005\u6a21\u5f0f\uff08Mediator Pattern\uff09\u662f\u7528\u6765\u964d\u4f4e\u591a\u4e2a\u5bf9\u8c61\u548c\u7c7b\u4e4b\u95f4\u7684\u901a\u4fe1\u590d\u6742\u6027\u3002\u8fd9\u79cd\u6a21\u5f0f\u63d0\u4f9b\u4e86\u4e00\u4e2a\u4e2d\u4ecb\u7c7b\uff0c\u8be5\u7c7b\u901a\u5e38\u5904\u7406\u4e0d\u540c\u7c7b\u4e4b\u95f4\u7684\u901a\u4fe1\uff0c\u5e76\u652f\u6301\u677e\u8026\u5408\uff0c\u4f7f\u4ee3\u7801\u6613\u4e8e\u7ef4\u62a4\u3002\u4e2d\u4ecb\u8005\u6a21\u5f0f\u5c5e\u4e8e\u884c\u4e3a\u578b\u6a21\u5f0f\u3002"),(0,o.kt)("h2",{id:"\u9762\u5411\u5bf9\u8c61\u4f8b\u5b50"},"\u9762\u5411\u5bf9\u8c61\u4f8b\u5b50\uff1a"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"}," class Player{\n     constructor(name, teamColor, playerDirector) {\n         this.name = name;\n         this.teamColor = teamColor;\n         this.status = 'live';\n         this.playerDirector = playerDirector;\n         this.add();\n     }\n\n     win() {\n         console.log('for self win action: ' + this.name);\n     }\n\n     lose() {\n         console.log('for self lose action: ' + this.name);\n     }\n\n     add() {\n         console.log('for self add action: ' + this.name);\n         this.playerDirector.recieveMessage('add', this);\n     }\n\n     remove() {\n         console.log('for self remove action: ' + this.name);\n         this.playerDirector.recieveMessage('remove', this);\n     }\n\n     die() {\n         console.log('for self die action: ' + this.name);\n         this.playerDirector.recieveMessage('die', this);\n     }\n\n     getMessage(message) {\n         console.log(`${this.name} recieved message: ${message}`);\n     }\n }\n\n export class PlayerMediator{\n     constructor() {\n         this.players = {};\n     }\n\n     recieveMessage(type, player) {\n         this[type](player);\n     }\n\n     add(player) {\n         this.players[player.teamColor] = this.players[player.teamColor] || [];\n         this.players[player.teamColor].push(player);\n         this.getAllPlayerExceptThis(player).forEach((p) => {\n             p.getMessage(`player ${player.name} added.`);\n         });\n     }\n\n     remove(player) {\n         let index = this.players[player.teamColor].indexOf(player);\n         this.players[player.teamColor][index].status = 'disconnect';\n         this.getAllPlayerExceptThis(player).forEach((p) => {\n             p.getMessage(`player ${player.name} disconnected.`);\n         });\n         if (this.verifyOver(player.teamColor)) {\n             this.gameOver(player.teamColor)\n         }\n     }\n\n     die(player) {\n         let index = this.players[player.teamColor].indexOf(player);\n         this.players[player.teamColor][index].status = 'die';\n         this.getAllPlayerExceptThis(player).forEach((p) => {\n             p.getMessage(`player ${player.name} dead.`);\n         });\n         if (this.verifyOver(player.teamColor)) {\n             this.gameOver(player.teamColor)\n         }\n     }\n\n     getAllPlayerExceptThis(player) {\n         let ret = [];\n         for (let t of Object.keys(this.players)) {\n             for (let p of this.players[t]) {\n                 if (player !== p) {\n                     ret.push(p);\n                 }\n             }\n         }\n         return ret;\n     }\n\n     verifyOver(teamColor) {\n         for (let player of this.players[teamColor]) {\n             if (player.status === 'live') {\n                 return false;\n             }\n         }\n         return true\n     }\n\n     gameOver(teamColor) {\n         for (let t of Object.keys(this.players)) {\n             for (let player of this.players[t]) {\n                 if (teamColor === player.teamColor) {\n                     player.lose();\n                 } else {\n                     player.win();\n                 }\n             }\n         }\n     }\n }\n")))}f.isMDXComponent=!0}}]);