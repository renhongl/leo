"use strict";(self.webpackChunkdocusaurus=self.webpackChunkdocusaurus||[]).push([[2304],{3905:function(e,n,t){t.d(n,{Zo:function(){return l},kt:function(){return f}});var r=t(7294);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function u(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function i(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var s=r.createContext({}),c=function(e){var n=r.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):u(u({},n),e)),t},l=function(e){var n=c(e.components);return r.createElement(s.Provider,{value:n},e.children)},m={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},p=r.forwardRef((function(e,n){var t=e.components,o=e.mdxType,a=e.originalType,s=e.parentName,l=i(e,["components","mdxType","originalType","parentName"]),p=c(t),f=o,d=p["".concat(s,".").concat(f)]||p[f]||m[f]||a;return t?r.createElement(d,u(u({ref:n},l),{},{components:t})):r.createElement(d,u({ref:n},l))}));function f(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var a=t.length,u=new Array(a);u[0]=p;var i={};for(var s in n)hasOwnProperty.call(n,s)&&(i[s]=n[s]);i.originalType=e,i.mdxType="string"==typeof e?e:o,u[1]=i;for(var c=2;c<a;c++)u[c]=t[c];return r.createElement.apply(null,u)}return r.createElement.apply(null,t)}p.displayName="MDXCreateElement"},457:function(e,n,t){t.r(n),t.d(n,{assets:function(){return l},contentTitle:function(){return s},default:function(){return f},frontMatter:function(){return i},metadata:function(){return c},toc:function(){return m}});var r=t(7462),o=t(3366),a=(t(7294),t(3905)),u=["components"],i={title:"15.\u4e09\u6570\u76f8\u52a0/Three Sum",tags:["\u529b\u6263\u7b97\u6cd5","\u4e2d\u7b49"]},s=void 0,c={unversionedId:"\u529b\u6263\u7b97\u6cd5\u9898/a11",id:"\u529b\u6263\u7b97\u6cd5\u9898/a11",title:"15.\u4e09\u6570\u76f8\u52a0/Three Sum",description:"",source:"@site/docs/\u529b\u6263\u7b97\u6cd5\u9898/a11.md",sourceDirName:"\u529b\u6263\u7b97\u6cd5\u9898",slug:"/\u529b\u6263\u7b97\u6cd5\u9898/a11",permalink:"/leo/docs/\u529b\u6263\u7b97\u6cd5\u9898/a11",tags:[{label:"\u529b\u6263\u7b97\u6cd5",permalink:"/leo/docs/tags/\u529b\u6263\u7b97\u6cd5"},{label:"\u4e2d\u7b49",permalink:"/leo/docs/tags/\u4e2d\u7b49"}],version:"current",frontMatter:{title:"15.\u4e09\u6570\u76f8\u52a0/Three Sum",tags:["\u529b\u6263\u7b97\u6cd5","\u4e2d\u7b49"]},sidebar:"tutorialSidebar",previous:{title:"1.\u4e24\u6570\u76f8\u52a0/Two Sum",permalink:"/leo/docs/\u529b\u6263\u7b97\u6cd5\u9898/a1"},next:{title:"\u6392\u5e8f/Sort",permalink:"/leo/docs/sort"}},l={},m=[],p={toc:m};function f(e){var n=e.components,t=(0,o.Z)(e,u);return(0,a.kt)("wrapper",(0,r.Z)({},p,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"/**\n * @param {number[]} nums\n * @return {number[][]}\n */\nvar threeSum = function (nums) {\n  var result = [];\n  nums = nums.sort((a,b) => a - b);\n  for (var i = 0; i < nums.length - 2; i++) {\n    if (nums[i] !== nums[i - 1]) {\n      var start = i + 1;\n      var end = nums.length - 1;\n      while (start < end) {\n        if (nums[i] + nums[start] + nums[end] < 0) {\n          start++;\n        } else if (nums[i] + nums[start] + nums[end] > 0) {\n          end--;\n        } else {\n          result.push([nums[i], nums[start], nums[end]]);\n            do{\n                start++;\n            }\n            while(nums[start] === nums[start - 1])\n\n        }\n      }\n    }\n  }\n  return result;\n};\n\n")))}f.isMDXComponent=!0}}]);