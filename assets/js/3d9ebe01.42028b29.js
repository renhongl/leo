"use strict";(self.webpackChunkdocusaurus=self.webpackChunkdocusaurus||[]).push([[6385],{3905:function(e,r,n){n.d(r,{Zo:function(){return s},kt:function(){return m}});var t=n(7294);function a(e,r,n){return r in e?Object.defineProperty(e,r,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[r]=n,e}function o(e,r){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);r&&(t=t.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),n.push.apply(n,t)}return n}function u(e){for(var r=1;r<arguments.length;r++){var n=null!=arguments[r]?arguments[r]:{};r%2?o(Object(n),!0).forEach((function(r){a(e,r,n[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(n,r))}))}return e}function i(e,r){if(null==e)return{};var n,t,a=function(e,r){if(null==e)return{};var n,t,a={},o=Object.keys(e);for(t=0;t<o.length;t++)n=o[t],r.indexOf(n)>=0||(a[n]=e[n]);return a}(e,r);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(t=0;t<o.length;t++)n=o[t],r.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var c=t.createContext({}),l=function(e){var r=t.useContext(c),n=r;return e&&(n="function"==typeof e?e(r):u(u({},r),e)),n},s=function(e){var r=l(e.components);return t.createElement(c.Provider,{value:r},e.children)},p={inlineCode:"code",wrapper:function(e){var r=e.children;return t.createElement(t.Fragment,{},r)}},f=t.forwardRef((function(e,r){var n=e.components,a=e.mdxType,o=e.originalType,c=e.parentName,s=i(e,["components","mdxType","originalType","parentName"]),f=l(n),m=a,d=f["".concat(c,".").concat(m)]||f[m]||p[m]||o;return n?t.createElement(d,u(u({ref:r},s),{},{components:n})):t.createElement(d,u({ref:r},s))}));function m(e,r){var n=arguments,a=r&&r.mdxType;if("string"==typeof e||a){var o=n.length,u=new Array(o);u[0]=f;var i={};for(var c in r)hasOwnProperty.call(r,c)&&(i[c]=r[c]);i.originalType=e,i.mdxType="string"==typeof e?e:a,u[1]=i;for(var l=2;l<o;l++)u[l]=n[l];return t.createElement.apply(null,u)}return t.createElement.apply(null,n)}f.displayName="MDXCreateElement"},2980:function(e,r,n){n.r(r),n.d(r,{assets:function(){return s},contentTitle:function(){return c},default:function(){return m},frontMatter:function(){return i},metadata:function(){return l},toc:function(){return p}});var t=n(7462),a=n(3366),o=(n(7294),n(3905)),u=["components"],i={title:"55.\u8df3\u8dc3\u6e38\u620f/Jump Game",tags:["\u529b\u6263\u7b97\u6cd5","\u4e2d\u7b49","\u52a8\u6001\u89c4\u5212"]},c=void 0,l={unversionedId:"\u529b\u6263\u7b97\u6cd5\u9898/a55",id:"\u529b\u6263\u7b97\u6cd5\u9898/a55",title:"55.\u8df3\u8dc3\u6e38\u620f/Jump Game",description:"",source:"@site/docs/\u529b\u6263\u7b97\u6cd5\u9898/a55.md",sourceDirName:"\u529b\u6263\u7b97\u6cd5\u9898",slug:"/\u529b\u6263\u7b97\u6cd5\u9898/a55",permalink:"/leo/docs/\u529b\u6263\u7b97\u6cd5\u9898/a55",tags:[{label:"\u529b\u6263\u7b97\u6cd5",permalink:"/leo/docs/tags/\u529b\u6263\u7b97\u6cd5"},{label:"\u4e2d\u7b49",permalink:"/leo/docs/tags/\u4e2d\u7b49"},{label:"\u52a8\u6001\u89c4\u5212",permalink:"/leo/docs/tags/\u52a8\u6001\u89c4\u5212"}],version:"current",frontMatter:{title:"55.\u8df3\u8dc3\u6e38\u620f/Jump Game",tags:["\u529b\u6263\u7b97\u6cd5","\u4e2d\u7b49","\u52a8\u6001\u89c4\u5212"]},sidebar:"tutorialSidebar",previous:{title:"20.\u6709\u6548\u7684\u7b26\u53f7/Valid Parentheses",permalink:"/leo/docs/\u529b\u6263\u7b97\u6cd5\u9898/a20"},next:{title:"94. \u4e8c\u53c9\u6811\u4e2d\u5e8f\u904d\u5386/Binary Tree Inorder Traversal",permalink:"/leo/docs/\u529b\u6263\u7b97\u6cd5\u9898/a94"}},s={},p=[],f={toc:p};function m(e){var r=e.components,n=(0,a.Z)(e,u);return(0,o.kt)("wrapper",(0,t.Z)({},f,n,{components:r,mdxType:"MDXLayout"}),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"/**\n * @param {number[]} nums\n * @return {boolean}\n */\nvar canJump = function(nums) {\n    var arr = new Array(nums.length).fill(0);\n    arr[nums.length - 1] = 1;\n    \n    for (var i = nums.length - 2; i >= 0; i--) {\n        for (var j = 1; j <= nums[i]; j++) {\n            if (arr[i + j] === 1) {\n                arr[i] = 1;\n                break;\n            }\n        }\n    }\n       \n    if (arr[0] === 1) {\n        return true;\n    } else {\n        return false;\n    }\n};\n")))}m.isMDXComponent=!0}}]);